<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		">
	<context:annotation-config />
	<aop:aspectj-autoproxy />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<context:component-scan
		base-package="com.opensource.nredis.proxy.monitor.service.impl" />
	<context:component-scan
		base-package="com.opensource.nredis.proxy.monitor.quartz.impl" />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="modify*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="BeanProxy"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<!-- 对类名以MybatisService结尾的类进行代理 -->
			<value>*Service</value>
		</property>
		<!-- 对代理类进行加载拦截器(实现通知的过程) -->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<!--zookeeper 配置 -->
	<bean id="nRedisProxyZookeeper"
		class="com.opensource.nredis.proxy.monitor.zookeeper.NRedisProxyZookeeper" init-method="init">
		<property name="addressURL" value="127.0.0.1:2181"></property>
		<property name="sessionTimeout" value="5000"></property>
		<property name="timeout" value="5000"></property>
	</bean>
	<!--zookeeper 配置 -->
	<!--redis 配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="2048" />
        <property name="maxIdle" value="200" />
        <property name="numTestsPerEvictionRun" value="1024"/>
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <property name="minEvictableIdleTimeMillis" value="-1" />
        <property name="softMinEvictableIdleTimeMillis" value="10000" />
        <property name="maxWaitMillis" value="1500"/>
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="blockWhenExhausted" value="false"/>
	</bean>
	<bean id="jedisShardInfo" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="127.0.0.1" />
		<constructor-arg index="1" value="6382" type="int" />
	</bean>
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<ref bean="jedisShardInfo" />
			</list>
		</constructor-arg>
	</bean>
	<!--redis 配置 -->
</beans>