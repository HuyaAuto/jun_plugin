<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="false">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<property name="validationQuery" value="${validationQuery.sqlserver}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 开启Druid的监控统计功能 -->
		<property name="filters" value="stat" />
	</bean>

	<!-- 使用spring annotation自动扫描配置 -->
	<context:component-scan base-package="com.osmp.web">
		<context:exclude-filter type="regex"
			expression="com\.osmp\.web\..*?\.controller\..*?" />
	</context:component-scan>

	<bean id="myBatisPageIntercept" class="com.osmp.web.core.mybatis.MybatisPageInterceptor">
		<property name="databaseType" value="mysql"></property>
	</bean>
	<bean id="myBatisJsonIntercept" class="com.osmp.web.core.mybatis.MybatisJsonInterceptor"></bean>
	<!-- SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="com.osmp.web.core.mybatis.PackagesSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 根据实际情况修改或添加多个 -->
		<property name="typeAliasesPackage" value="com.osmp.web.**.entity" />
		<property name="plugins">
			<list>
				<ref bean="myBatisPageIntercept" />
				<ref bean="myBatisJsonIntercept" />
			</list>
		</property>
	</bean>

	<!-- Mapper自动扫描配置 -->
	<bean name="scan"
		class="com.osmp.web.core.mybatis.PackagesMapperScannerConfigurer">
		<!-- 根据实际情况修改或添加多个 -->
		<property name="basePackage" value="com.osmp.web.**.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务拦截器配置 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED,-RuntimeException</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-RuntimeException</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-RuntimeException</prop>
				<prop key="option*">PROPAGATION_REQUIRED,-RuntimeException</prop>
			</props>
		</property>
	</bean>

	<!-- 采用自动BeanNameAutoProxyCreator实现事务拦截代理的自动配置 基于服务的事务管理 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service*</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- 使用spring annotation自动事务配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 系统初始化工具类 -->
	<bean class="com.osmp.web.core.SystemFrameWork"></bean>
	
	<!-- HttpClientWrapper -->
	<bean class="com.osmp.web.core.tools.HttpClientWrapper">
	   <property name="client">
	       <bean class="org.apache.commons.httpclient.HttpClient"></bean>
	   </property>
	   <property name="connectionTimeout" value="10000"></property>
	   <property name="timeout" value="10000"></property>
	</bean>
	
	<bean id="webClient" class="com.osmp.http.client.impl.DefaultCxfClient">
		<property name="cxfServerUrl" value="http://localhost:8181/cxf/http/service/data"></property>
		<property name="projectName" value="osmp"></property>
		<property name="connectTimeout" value="100000"></property>
		<property name="socketTimeout" value="100000"></property>
	</bean>
	
	<bean id="zookeeperService" class="com.osmp.http.client.zookeeper.ZookeeperService" init-method="init">
		<property name="url" value="10.2.1.49:2181"></property>
	</bean>

</beans>